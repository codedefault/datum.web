(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-7aa6defd"],{"0910":function(a,t,e){},"9d70":function(a,t,e){"use strict";e("0910")},f820:function(a,t,e){"use strict";e.r(t);var b=e("7a23"),d={class:"da-about"},u=Object(b["o"])("<h1 data-v-2972ae1b>DATUM-在线模拟数据生成器</h1><p data-v-2972ae1b><b data-v-2972ae1b>你是否还在为无处生成模拟数据而烦恼呢？</b></p><p data-v-2972ae1b><b data-v-2972ae1b> 你是否还在为后端接口迟迟未提供真实数据而耽误前端开发进度心烦意乱呢？ </b></p><p data-v-2972ae1b>也许<b data-v-2972ae1b>Datum</b>可以解你燃眉之急。</p><p data-v-2972ae1b> 无论是前/后端开发者，都可以使用Datum在线快速生成不同格式(JSON,CSV,SQL,XML等)的模拟数据，让你在开发过程脱离无真实数据而无法进行测试的烦恼。 </p><h2 data-v-2972ae1b>Datum支持的数据格式</h2><p data-v-2972ae1b> Datum目前已支持模拟生成多种类型的数据，包括：编号、姓名、性别、邮箱地址、电话号码、IP地址(IPV4/IPV6)、GUID、布尔值、日期、时间戳、数字、连续数字、自定义(序号)、随机密码、MAC地址、颜色名、颜色(十六进制)、金额、随机字符串(自定义)等约20种数据格式，其他数据格式正在不断完善中。 </p><h2 data-v-2972ae1b>Datum的技术架构</h2><p data-v-2972ae1b> Datum的前端采用渐近式开发框架--Vue.js，并以Ant-Design-Vue为UI框架，让用户的交互体验如某芙般丝滑。 </p><p data-v-2972ae1b> 基于Vue.js的数据双向绑定，Datum在操作的体验上也表现得比较好，您可以在允许的数量下随意增、减字段、灵活调整不同字段的数据类型，格式以及字段间的排列顺序等等。 </p><p data-v-2972ae1b> Datum的后端则是基于.NET 6 Minimal API实现数据接口服务，执行速度及效率都非常高。 </p>",11),n=[u];function p(a,t,e,u,p,v){return Object(b["H"])(),Object(b["m"])("div",d,n)}var v={name:"about",setup:function(){return{value:""}}},c=(e("9d70"),e("6b0d")),s=e.n(c);const o=s()(v,[["render",p],["__scopeId","data-v-2972ae1b"]]);t["default"]=o}}]);